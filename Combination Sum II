//{ Driver Code Starts
//Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
//User function Template for C++

class Solution{
public:

    void recursion(vector<int>arr, int n, int k, int sum, int i, vector<vector<int>>& ans, vector<int>& temp){
        
        if(sum == k){
            ans.push_back(temp);
            return;
        }
        
        if(sum > k || i >= n){
            return;
        }
        
        // Including the current element in the sum
        temp.push_back(arr[i]);
        recursion(arr, n, k, sum+arr[i], i+1, ans, temp);
        temp.pop_back();
        
        // Skipping duplicates
        while(i<n-1 && arr[i] == arr[i+1])
            i++;
        
        // Skipping the current element and moving to the next
        recursion(arr, n, k, sum, i+1, ans, temp);
        
    }
    
    vector<vector<int>> CombinationSum2(vector<int> arr,int n,int k)
    {
        //code here
        
        int i=0;
        int sum=0;
        vector<vector<int>> ans;
        vector<int> temp;
        sort(arr.begin(),arr.end());
        
        recursion(arr, n, k, sum, i, ans, temp);
        
        sort(ans.begin(), ans.end());
        
        return ans;
    }
};

//{ Driver Code Starts.


int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n,k;
        cin>>n>>k;
        vector<int> arr(n);
        for(int i=0;i<n;i++)
        {
            cin>>arr[i];
        }
        Solution ob;
        auto obj=ob.CombinationSum2(arr,n,k);
        for(int i=0;i<obj.size();i++)
        {
            for(int j=0;j<obj[i].size();j++)
            {
                cout<<obj[i][j]<<" ";
            }
            cout<<"\n";
        }
        if(obj.size()==0) cout<<"\n";
    }
    return 0;
}
// } Driver Code Ends
