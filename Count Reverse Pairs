//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
#include <iostream>
using namespace std;

// } Driver Code Ends
// User function Template for C++

class Solution {
  public:
    
    int solve(vector<int>& nums, int start, int end, int mid){

        int len1 = mid-start+1;
        int len2 = end-mid;

        vector<int>a(len1);
        vector<int>b(len2);

        int count = 0;

        for(int i=0; i<len1; i++){
            a[i] = nums[start+i];
        }

        for(int i=0; i<len2; i++){
            b[i] = nums[mid+1+i];
        }

        sort(a.begin(), a.end());
        sort(b.begin(), b.end());

        int i=0;
        int j=0;

        while(i<len1 && j<len2){

            if((long long)a[i] > (long long)2*b[j]){
                count += len1-i;
                j++;
            }
            else{
                i++;
            }
        }
        return count;
    }
    
    int mergeSort(vector<int>& nums, int start, int end){

        int count = 0;

        if(start<end){
            int mid = start+(end-start)/2;
            count += mergeSort(nums, start, mid);
            count += mergeSort(nums, mid+1, end);
            count += solve(nums, start, end, mid);
        }
        
        return count;        
    }
    
    int countRevPairs(int n, vector<int> arr) {
        return mergeSort(arr, 0, n-1);
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        vector<int> arr;

        for (int i = 0; i < n; ++i) {
            int x;
            cin >> x;
            arr.push_back(x);
        }

        Solution obj;
        cout << obj.countRevPairs(n, arr) << endl;
    }
    return 0;
}
// } Driver Code Ends
