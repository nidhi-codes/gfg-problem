//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    int maxPathSum(vector<int> &arr1, vector<int> &arr2) {
        // Code here
        int len1 = arr1.size();
        int len2 = arr2.size();
        
        int i=0;
        int j=0;
        
        int a=0;
        int b=0;
        
        int ans=0;
        
        while(i<len1 && j<len2){
            
            if(arr1[i] == arr2[j]){
                a += arr1[i++];
                b += arr2[j++];
                ans += max(a,b);
                a=0;
                b=0;
            }
            else{
                if(arr1[i] < arr2[j]){
                    a += arr1[i++];
                }
                else{
                    b += arr2[j++];
                }
            }
        }
        
        while(i<len1){
            a += arr1[i++];
        }
        
        while(j<len2){
            b += arr2[j++];
        }
        
        ans += max(a,b);
        return ans;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    cin.ignore();
    while (t--) {
        vector<int> arr1;
        string input;
        getline(cin, input);
        stringstream ss(input);
        int number;
        while (ss >> number) {
            arr1.push_back(number);
        }
        vector<int> arr2;
        string input2;
        getline(cin, input2);
        stringstream ss2(input2);
        int number2;
        while (ss2 >> number2) {
            arr2.push_back(number2);
        }
        Solution ob;
        long long ans = ob.maxPathSum(arr1, arr2);
        cout << ans << endl;
    }
    return 0;
}
// } Driver Code Ends
