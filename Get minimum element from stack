//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
/*
The structure of the class is as follows
class _stack{
stack<int> s;
int minEle;
public :
    int getMin();
    int pop();
    void push(int);
};
*/

class Solution{
    
    int mini;
    stack<int> st;
    
    public:
    
       /*returns min element from stack*/
       int getMin(){
           
           if(st.empty()){
                return -1;
            }
            
            return mini;
        
       }
       
       /*returns poped element from stack*/
       int pop(){
           
           if(st.empty()){
                return -1;
            }
    
            int topp = st.top();
            st.pop();
    
            if(topp < mini){
                
                int temp = mini;
                mini = 2*mini - topp;
                return temp;
            }
            
            return topp;
       }
       
       /*push element data into the stack*/
       void push(int data){
           
           if(st.empty()){
                st.push(data);
                mini = data;
                return;
            }
    
            if(data > mini){
                st.push(data);
            }
    
            else{
                
                int val = 2*data - mini;
                mini = data;
                st.push(val);
            }
       }
};

//{ Driver Code Starts.

int main()
 {
    long long t;

    cin>>t;
    while(t--)
    {
        int q;
        cin>>q;
        Solution ob;
        while(q--){
           int qt;
           cin>>qt;
           if(qt==1)
           {
              //push
              int att;
              cin>>att;
              ob.push(att);
           }
           else if(qt==2)
           {
              //pop
              cout<<ob.pop()<<" ";
           }
           else if(qt==3)
           {
              //getMin
              cout<<ob.getMin()<<" ";
           }
       }
       cout<<endl;
    }
    return 0;
}

// } Driver Code Ends
