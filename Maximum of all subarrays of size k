//{ Driver Code Starts
//Initial template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function template for C++

class Solution
{
  public:
    //Function to find maximum of each subarray of size k.
    vector <int> max_of_subarrays(int *A, int N, int K)
    {
        // your code here
        deque<int> d;
        vector<int> ans;
    
        for(int i=0; i<K; i++){
    
            while (!d.empty() && A[i] >= A[d.back()]) {
                d.pop_back();
            }
            d.push_back(i);
            
        }
        
        
        ans.push_back(A[d.front()]);
        
        
        if(K < N){
            
            for(int i=K; i<N; i++){
                
                
                //pop_front
                while (!d.empty() && d.front() == i - K) {
                    d.pop_front();
                }
                
                
                //pop_back
                while (!d.empty() && A[i] >= A[d.back()]) {
                    d.pop_back();
                }
                
                
                d.push_back(i);
                ans.push_back(A[d.front()]);
            }
        }
        
        return ans;
    }
};

//{ Driver Code Starts.

int main() {
	
	int t;
	cin >> t;
	
	while(t--){
	    
	    int n, k;
	    cin >> n >> k;
	    
	    int arr[n];
	    for(int i = 0;i<n;i++) 
	        cin >> arr[i];
	    Solution ob;
	    vector <int> res = ob.max_of_subarrays(arr, n, k);
	    for (int i = 0; i < res.size (); i++) 
	        cout << res[i] << " ";
	    cout << endl;
	    
	}
	
	return 0;
}
// } Driver Code Ends
