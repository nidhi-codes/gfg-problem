//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:

    string pattern(vector<vector<int>> &arr) {
        // Code Here
        
        int n = arr.size();
        string ans;
        
        //row
        for(int i=0; i<n; i++){
            
            bool flag = true;
            int s=0;
            int e=n-1;
            
            while(s<e){
                if(arr[i][s] != arr[i][e]){
                    flag = false;
                    break;
                }
                s++;
                e--;
            }
            
            if(flag){
                ans += to_string(i) + ' ' + 'R';
                return ans;
                
            }
        }
        
        //col
        for(int i=0; i<n; i++){
            
            bool flag = true;
            int s=0;
            int e=n-1;
            
            while(s<e){
                if(arr[s][i] != arr[e][i]){
                    flag = false;
                    break;
                }
                s++;
                e--;
            }
            
            if(flag){
                ans += to_string(i) + ' ' + 'C';
                return ans;
            }
        }
        return "-1";
    }
};


//{ Driver Code Starts.

int main() {

    int t, n, i, j, flag, k;
    cin >> t;

    while (t--) {
        cin >> n;
        vector<vector<int>> a(n, vector<int>(n));

        for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++)
                cin >> a[i][j];
        }
        Solution ob;
        cout << ob.pattern(a) << endl;
    }
    return 0;
}
// } Driver Code Ends
